 [
    {
      "id": 1,
      "name": "TechLyst",
      "image": "https://i.ibb.co/Ngd2SZkf/Screenshot-2025-07-25-022034.png",
      "slides": [
        "https://i.ibb.co/Ngd2SZkf/Screenshot-2025-07-25-022034.png",
        "https://i.ibb.co/N23CFG9P/Screenshot-2025-07-25-022152.png",
        "https://i.ibb.co/4nK6mTB4/Screenshot-2025-07-25-022323.png",
        "https://i.ibb.co/xtvwJNBs/Screenshot-2025-07-25-022447.png"
      ],
      "description": "A full-stack MERN platform for discovering, sharing, and reviewing tech products with role-based access, moderation tools, and subscription system.",
      "details": "TechLyst is a feature-rich product showcase platform inspired by Product Hunt. It allows users to add, upvote, review, and report tech products like web apps, AI tools, and games. The app includes secure Firebase + JWT authentication, moderator and admin dashboards, and a Stripe-powered subscription model with coupon support. Users can explore featured/trending products, while moderators and admins manage content, users, and site-wide statistics.",
      "github": "https://github.com/amirsayeed/techlyst-client",
      "live": "https://techlyst-411bf.web.app/",
      "technologies": ["React", "Express", "MongoDB", "Firebase", "Stripe", "Tailwind", "DaisyUI"],
      "challenges": [
        "Implementing secure upvote and report systems with duplicate prevention.",
        "Handling dynamic role-based dashboard routing and component rendering.",
        "Integrating Stripe payment with coupon validation and membership tracking."
      ],
      "future": [
        "Add real-time notifications for product updates and review responses.",
        "Implement analytics dashboard for product owners.",
        "Introduce public API access for integrating TechLyst products elsewhere.",
        "Allow users to bookmark or follow favorite products and creators.",
        "Enable in-app messaging between product creators and reviewers."
      ]
    },
    {
      "id": 2,
      "name": "Volunteer Management",
      "image": "https://i.ibb.co/B2tF57H4/Screenshot-2025-06-28-225655.png",
      "slides": [
        "https://i.ibb.co/B2tF57H4/Screenshot-2025-06-28-225655.png",
        "https://i.ibb.co/XwhwBFV/Screenshot-2025-06-29-213240.png",
        "https://i.ibb.co/BKqQmkrS/Screenshot-2025-06-29-213347.png",
        "https://i.ibb.co/q3vDRhSZ/Screenshot-2025-06-29-215542.png"
      ],
      "description": "A responsive platform for creating and joining volunteer opportunities with secure authentication, post management, and personalized user experience.",
      "details": "Volunteer Management is a full-stack web application where users can create volunteering posts, browse other users’ posts, and choose to participate. Each user can manage their own posts through full CRUD operations and can also cancel their participation from events they’ve joined. The app emphasizes user-generated content, secure authentication, and a smooth UI for managing volunteering activities without any admin role.",
      "github": "https://github.com/amirsayeed/Volunteer-Management-Client",
      "live": "https://volunteer-management-a44f1.web.app/",
      "technologies": ["React", "Firebase", "Express", "MongoDB", "Tailwind"],
      "challenges": [
        "Ensuring that only post owners can update or delete their posts.",
        "Managing volunteer states and cancellation without admin moderation.",
        "Implementing protected routes and conditional rendering based on auth state."
      ],
      "future": [
        "Introduce role-based access with admin and user roles.",
        "Create a dedicated admin dashboard to manage all posts and users.",
        "Add event participation analytics for better engagement insights.",
        "Implement report/flag feature to monitor inappropriate content.",
        "Send email notifications to users for upcoming volunteer events."
      ]
    },
    {
      "id": 3,
      "name": "Plant Care",
      "image": "https://i.ibb.co/jkNdTkvs/Screenshot-2025-06-28-231328.png",
      "slides": [
        "https://i.ibb.co/jkNdTkvs/Screenshot-2025-06-28-231328.png",
        "https://i.ibb.co/qYQLx7TK/Screenshot-2025-06-29-220526.png",
        "https://i.ibb.co/RGwVJkwK/Screenshot-2025-06-29-220639.png",
        "https://i.ibb.co/5XCSjmqj/Screenshot-2025-06-29-220826.png"
      ],
      "description": "A full-stack plant management app where users can track and care for their plants with personalized CRUD features, secure auth, theme toggle, and responsive UI.",
      "details": "Plant Care is a responsive full-stack application tailored for plant lovers. Users can add, edit, and delete plant profiles, each associated with care tips and maintenance schedules. The platform supports Firebase authentication, a user dashboard, theme toggle, and a table view of all plants. Users can view plant details, sort by upcoming watering dates, and manage their personal plant list. The goal is to simplify the plant care process while offering a smooth and user-friendly experience.",
      "github": "https://github.com/amirsayeed/Plant-Care-Client",
      "live": "https://plant-care-tracker-6b11a.web.app/",
      "technologies": ["React", "Firebase", "Express", "MongoDB", "Tailwind"],
      "challenges": [
        "Implementing dynamic sorting for plant data based on next watering date.",
        "Querying and displaying the most recently added plants on the homepage.",
        "Ensuring authenticated users only see and manage their own plants securely."
      ],
      "future": [
        "Add calendar view for upcoming watering schedules.",
        "Implement notifications/reminders for watering (email or in-app).",
        "Create an admin role to feature or manage user-submitted plants.",
        "Support image upload for each plant profile.",
        "Implement pagination for the all plants page to improve scalability."
      ]
    }
]

